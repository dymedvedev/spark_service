version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: compute_postgres
    environment:
      POSTGRES_DB: compute_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - compute_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d compute_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: compute_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - compute_network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: compute_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - compute_network

  redis:
    image: redis:7-alpine
    container_name: compute_redis
    ports:
      - "6379:6379"
    networks:
      - compute_network

  spark-master:
    image: bitnami/spark:3.5
    container_name: compute_spark_master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"
      - "7077:7077"
    networks:
      - compute_network

  spark-worker:
    image: bitnami/spark:3.5
    container_name: compute_spark_worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark-master
    networks:
      - compute_network

  compute-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: compute_service
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@postgres:5432/compute_db
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=receipts
      - KAFKA_GROUP_ID=compute_service
      - SPARK_MASTER=spark://spark-master:7077
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      redis:
        condition: service_started
      spark-master:
        condition: service_started
    networks:
      - compute_network
    volumes:
      - ./data:/app/data
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  compute_network:
    driver: bridge
